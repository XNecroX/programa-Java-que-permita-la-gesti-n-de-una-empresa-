Programación Orientada a Objetos - S2A
23:50

Se plantea desarrollar un programa Java que permita la gestión de una empresa 
agroalimentaria que trabaja con tres tipos de productos:
productos frescos.
productos refrigerados.
productos congelados.
Todos los productos llevan esta información común:
fecha de caducidad y número de lote.
A su vez, cada tipo de producto lleva alguna información específica.
Los productos frescos deben llevar:
	 La fecha de envasado  
	 El país de origen. 
Los productos refrigerados deben llevar: 
    el código del organismo de supervisión alimentaria 
   la fecha de envasado 
   la temperatura de mantenimiento recomendada
   el país de origen.
Los productos congelados deben llevar:
   la fecha de envasado
   el país de origen 
   la temperatura de mantenimiento recomendada.
Hay tres tipos de productos congelados:
   congelados por aire 
   congelados por agua 	
   congelados por nitrógeno. 
Los productos congelados por aire: 
   deben llevar la información de la composición del aire con que fue congelado (% de nitrógeno, % de oxígeno, % de dióxido de carbono y % de vapor de agua). 
Los productos congelados por agua:
   deben llevar la información de la salinidad del agua con que se realizó 
   la congelación en gramos de sal por litro de agua. 
Los productos congelados por nitrógeno: 
   deben llevar la información del método de congelación empleado
   del tiempo de exposición al nitrógeno expresada en segundos.  

Crear el código de las clases Java implementando una relación de herencia siguiendo estas indicaciones:
a) En primer lugar realizar un esquema con papel y bolígrafo donde se represente cómo se van a organizar las clases cuando escribamos el código. Estudiar los atributos de las clases y trasladar a la superclase todo atributo que pueda ser trasladado.
b) Crear superclases intermedias (aunque no se correspondan con la descripción dada de la empresa) para agrupar atributos y métodos cuando sea posible.
c) Cada clase debe disponer de constructor y permitir establecer (set) y recuperar (get) el valor de sus atributos y tener un método que permita mostrar la información del objeto cuando sea procedente.

NOTA: Enviar en los puntos ya mencionados en este apartado.
